<!-- app/views/chats/show.html.erb -->
<%= render partial: 'queries/grid' %>
<style>
  .tall {
    height: calc(100% - 50px);
    display: flex;
    flex-direction: column;
  }
</style>
<div class="container-fluid tall ">
  <div class="row">
    <div class="col">
      <h1 class="mb-4">Chat</h1>
    </div>
    <div class="col text-end">
      <%= link_to new_chat_path, class: "btn btn-dark btn-plus btn-lg", data: { bs_toggle: "tooltip", bs_placement: "bottom", bs_custom_class: "custom-tooltip", bs_title: "New Chat" }, title: "New Chat" do %>
        <i class="bi bi-pencil-square"></i>
      <% end %>
    </div>
  </div>
  <div class="row scrollable-content" id="messages-scrollbox">
    <div class="col-12 ">
      <div id="messages">
        <% if @chat.messages.any? %>
          <%= render @chat.messages %>
        <% else %>
          <div class="card p-4 m-4 rounded-4 col-6">
            <h3>Welcome!</h3>
            <h5>I am here to help you with your data. Ask me anything!<br><br>Need to know the structure of your data? <br>Got missing keys? <br>Optimize your queries, code, or frameworks.<br><br> I can help with that!</h5>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>
<div class="container-fluid">
  <div class="row">
    <div class="col-12">
      <%= turbo_frame_tag "new_message" do %>
        <%= form_with model: [@data_source, @chat, Message.new], url: data_source_chat_messages_path(@data_source, @chat), local: false, data: { turbo: "true" } do |form| %>
          <%= form.hidden_field :role, value: 'user' %>
          <%= form.text_field :content, class: 'form-control border-1', placeholder: "Message AI" %>
        <% end %>
      <% end %>
    </div>
  </div>
</div>
<script>
  document.addEventListener("turbo:load", () => {
    const scrollboxDiv = document.getElementById("messages-scrollbox");

    if (scrollboxDiv) {
      scrollboxDiv.scrollTop = scrollboxDiv.scrollHeight;
    } else {
      console.error('Element with ID "messages-scrollbox" not found.');
    }

    <% @chat.messages.each do |message| %>
      <% if message.role == 'assistant' %>
          initializeGrid(
                'id<%= message.id %>',
                '<%= message.preview || message.sql %>'
          );
      <% end %>
    <% end %>
  });
  document.addEventListener('turbo:submit-end', (event) => {
  const form = event.target;


  if (form.querySelector('input[name="message[content]"]')) {
    form.querySelector('input[name="message[content]"]').value = '';
  }
  });
</script>